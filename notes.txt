

* To add a physical object to the scene, the user has to drag and drop it to the scene.

* To remove a physical object from scene, the user uses the delete tool

* If a physical object of the scene is present on the table, its image is not shown, but its bounding box is shown.

* If a physical object of the scene is not present on the table, its image is shown.

* we donâ€™t support multiple instances a physical object, because
 a) the use case become too complicated,
 b) there is no way to distinguish visually between two instances of the same object,
 c) the use cases are limited



=====================================================================

[*** OBSOLETE ***]

Objects can be added in two ways to the scene: 
	a) 
	By drag-n-drop from the object list (in that case the template image of the object is shown on the scene). 
	You can have multiple instances of the same object at the same time on the scene. Those instances are either a template image or the real object.

	b) 
	By putting them on the table. 


The physical objects view shows the list of the object classes that can be added to the scene. If an object class is added to the scene (one or multiples instances of it), then that object class is highlighted in the physical objects view. 

To remove a physical object instance from the scene the user either remove it from the tabletop (if it is on the table) or uses the delete tool to remove it.

The attach to combo box shows a list of instance of the objects available on the scene. 

When a physical object is removed form the scene the annotations attached to it remain in the scene, but are not attached to it. If the user want to also remove those annotations, he uses the delete tool. 




===================================================



Let each annotation draw itself. 

Let each annotation has its own select method for authoring time and select method for runtime. 


The SceneView widget has an active annotation tool. 
The SceneView widget forwards the mouse down, mouse mouse, mouse release events to its active annotation tool. 





==================================================

[DISCARDED in favor of annotation tools and fast implementation; It is too complex]

A scene consists of SceneNodes. 

The scene's root node is at the (0,0) position.

Each scene node corresponds to an object or an annotation.

Each scene node can have children scene nodes.

All children of a scene node have their positions relative to its position. 

We deliver the OpenCV frame with drawings for all scene nodes

Each scene node has a paint method.

When that paint method is called it draws itself on the given OpenCV frame, and calls recursively the paint method on all its children. 


=================================================

